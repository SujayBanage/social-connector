{"version":3,"sources":["UIshared/button/button.js","components/fileupload/fileupload.js","components/postupload/postupload.js","services/apiRequestService.js"],"names":["button","props","linkTo","to","className","classname","text","type","onClick","onclickHandler","Fileupload","encType","onSubmit","onSubmitHandler","htmlFor","id","name","placeholder","onChange","filesetHandler","description","value","onChangeHandler","apiRequest","apiRequestService","notify","success","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","Postupload","history","useHistory","useState","file","setFile","setDescription","e","a","preventDefault","console","log","formData","FormData","append","fileUpload","process","PRIVATE_URL","sessionStorage","getItem","res","data","push","target","files","userGoogleLogin","url","config","headers","axios","post","response","userFacebookLogin","token","get"],"mappings":"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","file":"static/js/18.dadf7570.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./button.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst button = (props) => {\r\n  return props.linkTo ? (\r\n    <Link to={props.linkTo} >\r\n      <button className={props.classname}>{props.text}</button>\r\n    </Link>\r\n  ) : (\r\n    <button className={props.classname} type={props.type} onClick={props.onclickHandler}>\r\n      {props.text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default button;\r\n","import React from \"react\";\r\nimport Button from '../../UIshared/button/button.js';\r\nconst Fileupload = (props) => {\r\n  return (\r\n    <form className=\"bg-white w-full shadow-md rounded p-4 m-2\" encType=\"multipart/form-data\" onSubmit={props.onSubmitHandler}>\r\n        <div className=\"mb-4\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"image\"\r\n              >\r\n                select image to upload\r\n              </label>\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"image\"\r\n                name=\"image\"\r\n                type=\"file\"\r\n                placeholder=\"select image \"\r\n                // value={props.file}\r\n                onChange={props.filesetHandler}\r\n              />\r\n          </div>\r\n          {props.description!==false ? <div className=\"mb-4\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"descreption\"\r\n              >\r\n                descreption\r\n              </label>\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                type=\"text\"\r\n                placeholder=\"add description....\"\r\n                value={props.description}\r\n                onChange={props.onChangeHandler}\r\n              />\r\n          </div> :null}\r\n          <Button classname=\"uploadimg p-2 rounded-md text-white\" type=\"submit\"  text=\"upload\"/>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Fileupload;\r\n","import React,{useState} from 'react';\r\nimport Fileupload from '../fileupload/fileupload.js';\r\nimport apiRequestService from '../../services/apiRequestService.js';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nconst apiRequest = new apiRequestService();\r\n\r\n\r\n\r\nconst notify = (success, message) => {\r\n  if (success === true) {\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else if (success === false) {\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else {\r\n    toast(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\nconst Postupload = () => {\r\n    const history = useHistory();\r\n    const [file,setFile] = useState('');\r\n    const [description,setDescription] = useState('');\r\n\r\n    const fileUpload=(e)=>{\r\n        setFile(e.target.files[0]);\r\n    }\r\n    \r\n    const inputchange =(e)=>{\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    const onSubmitHandler =async (e)=>{\r\n        e.preventDefault();\r\n        console.log(\"submit handler is working!!!\")\r\n        const formData = new FormData();\r\n        formData.append(\"description\",description);\r\n        formData.append(\"image\",file,file.name);\r\n        console.log(formData);\r\n        const res = await apiRequest.fileUpload(`${process.env.PRIVATE_URL}/postUpload`,formData,sessionStorage.getItem(\"authToken\"));\r\n        console.log(res);\r\n        if(res.data.success===true){\r\n            setFile('');\r\n            setDescription('');\r\n            notify(res.data.success, res.data.message);\r\n            history.push('/feed');\r\n        }\r\n        else{\r\n            notify(res.data.success, res.data.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"postUploadComponent md:w-3/5\">\r\n        <Fileupload file={file} description={description} filesetHandler={fileUpload} onChangeHandler={inputchange} onSubmitHandler={onSubmitHandler}/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Postupload;\r\n","import axios from 'axios';\r\nclass apiRequestService{\r\n    async sendformData(url, data){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        }       \r\n        try{\r\n            const response = await axios.post(url,data,config);\r\n            // console.log(response);\r\n            return response;\r\n        }\r\n        catch(err){\r\n            // console.log(err);\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async getuser(url,data,token){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\":`Bearer ${token}`\r\n            }\r\n        }\r\n        try{\r\n            const response = await axios.post(url,data,config);\r\n            return response;\r\n        }\r\n        catch(err){\r\n            return err.message;\r\n        }\r\n\r\n    }\r\n\r\n    async fetchData(url){\r\n        try{\r\n            const response = await axios.get(url);\r\n            return response;\r\n        }\r\n        catch(err){\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async fetchPrivateData(url,token){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\":`Bearer ${token}`\r\n            }\r\n        };\r\n        try {\r\n            const response = await axios.get(url,config);\r\n            return response;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n\r\n    }\r\n\r\n    async fileUpload(url,data,token){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"multipart/form-data\",\r\n                \"Authorization\":`Bearer ${token}`\r\n            }\r\n        }\r\n        try {\r\n            const response = await axios.post(url,data,config);\r\n            // console.log(response);\r\n            return response;\r\n        } catch (error) {\r\n            // console.log(error);\r\n            return error;    \r\n        }\r\n    }\r\n\r\n    userGoogleLogin=async(url,data)=>{\r\n        try{\r\n            const config ={\r\n                headers:{\r\n                    \"content-type\": \"application/json\"\r\n                }\r\n            }\r\n            const response = await axios.post(url,data,config)\r\n            return response;\r\n        }\r\n        catch(error){\r\n            return error;\r\n        }\r\n    }\r\n\r\n    userFacebookLogin=async(url,data)=>{\r\n        try{\r\n            const config ={\r\n                headers:{\r\n                    \"content-type\": \"application/json\"\r\n                }\r\n            }\r\n            const response = await axios.post(url,data,config)\r\n            return response;\r\n        }\r\n        catch(error){\r\n            return error;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default apiRequestService;"],"sourceRoot":""}