{"version":3,"sources":["UIshared/button/button.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Notifications/notification/notification.js","components/Notifications/notifications.js","services/apiRequestService.js"],"names":["button","props","linkTo","to","className","classname","text","type","onClick","onclickHandler","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","Notification","socket","useContext","socketContext","img","src","process","PRIVATE_URL","alt","name","console","log","emit","id","userid","chatroom","split","user","currentuser","apiRequest","apiRequestService","SideBar","lazy","Notifications","useState","notifications","setNotifications","setUser","useEffect","roomname","off","on","requestFrom","requestTo","username","User","notifyFrom","notifyTo","a","fetchPrivateData","sessionStorage","getItem","res","data","fetchUser","fallback","length","_id","map","notification","typeof","userGoogleLogin","url","config","headers","axios","post","response","userFacebookLogin","token","message","get"],"mappings":"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","file":"static/js/11.986441f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./button.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst button = (props) => {\r\n  return props.linkTo ? (\r\n    <Link to={props.linkTo} >\r\n      <button className={props.classname}>{props.text}</button>\r\n    </Link>\r\n  ) : (\r\n    <button className={props.classname} type={props.type} onClick={props.onclickHandler}>\r\n      {props.text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default button;\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React ,{useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '../../../UIshared/button/button.js';\r\nimport {socketContext} from '../../../index.js';\r\nimport './notification.css';\r\nconst Notification = (props) => {\r\n\r\n    const socket = useContext(socketContext);\r\n\r\n    const notificationClearHandler =()=>{\r\n        console.log('notification clear handler is running on client!!!');\r\n        socket.emit('singleNotificationClear',{id:props.id,userid:props.userid});\r\n    }\r\n\r\n    const groupChatAccept =()=>{\r\n        const chatroom = props.text.split(':');\r\n        console.log(chatroom);\r\n        socket.emit('addUserToChat',{user:props.userid,chatroom:chatroom[1],currentuser:props.name})\r\n    }\r\n    \r\n    const groupChatDecline =()=>{\r\n        const chatroom = props.text.split(':');\r\n        console.log(chatroom);\r\n        socket.emit('groupChatDecline',{user:props.userid,chatroom:chatroom[1],currentuser:props.name})\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={props.type===\"request\"||props.type===\"accept\"||props.type===\"groupChatRequest\" || props.type===\"positive\" ? \" notificationSuccess flex  items-center justify-center p-2 md:p-4 m-2 md:m-4 rounded-lg\": \"notification flex  items-center justify-center p-2 md:p-4 m-2 md:m-4 rounded-lg\"}>\r\n            <div className=\"notificationfrom flex items-center justify-center\">\r\n            {\r\n                props.img ? <img src={`${process.env.PRIVATE_URL}/${props.img}`} alt=\"profileimg\" className=\"h-12 md:h-16 w-12 md:w-16 rounded-full border-2 border-white\" alt=\"image\"/>: null\r\n            }\r\n            <Link to={`/profile/${props.name}`} className=\"m-2 md:m-4\">\r\n                <span className=\"hidden md:flex md:text-xl font-bold\">\r\n                    {props.name}\r\n                </span>\r\n            </Link>\r\n            </div>\r\n            <span className=\"md:text-xl text-white\">{props.text}</span>\r\n            <Button text=\"❌\" classname=\"rounded-md p-1 border-2 bordet-white md:p-2 bg-red-400 md:m-4 hover:bg-red-500\" onclickHandler={notificationClearHandler} />\r\n            {\r\n                props.type === 'groupChatRequest' ? <>\r\n                    <Button text=\"accept\" classname=\"rounded-md p-1 md:p-2 bg-blue-400 md:m-4 hover:bg-blue-500\" onclickHandler={groupChatAccept}/>\r\n                    <Button text=\"decline\"  classname=\"rounded-md p-1 md:p-2 bg-red-400 md:m-4 hover:bg-red-500\"  onclickHandler={groupChatDecline}/>\r\n                </> : null\r\n            }    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useContext, useEffect ,lazy,Suspense} from \"react\";\r\nimport { socketContext } from \"../../index.js\";\r\nimport Notification from \"./notification/notification.js\";\r\nimport Button from \"../../UIshared/button/button.js\";\r\nimport apiRequestService from \"../../services/apiRequestService.js\";\r\nconst apiRequest = new apiRequestService();\r\nconst SideBar = lazy(()=>import(\"../sideBar/sideBar.js\"));\r\nconst Notifications = () => {\r\n  const socket = useContext(socketContext);\r\n\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"join\", { roomname: \"notifications\" });\r\n    return () => {\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  socket.on(\"friendRequestNotify\", ({ requestFrom, requestTo }) => {\r\n    console.log(\"requestFrom\", requestFrom);\r\n    console.log(\"requestTo\", requestTo);\r\n    // requestFrom.username!==user.username ? setNotifications([...notifications,{name:requestFrom.username,img:requestFrom.profileimage,type:\"request\"}]) : setNotifications([...notifications,{name:requestTo.username,img:requestTo.profileimage,type:\"request\"}]);\r\n    requestFrom.username !== user.username\r\n      ? setNotifications([...requestTo.notifications])\r\n      : setNotifications([...requestFrom.notifications]);\r\n  });\r\n\r\n  socket.on(\"declineRequestNotify\", ({ requestFrom, requestTo }) => {\r\n    console.log(\"request from : \", requestFrom);\r\n    console.log(\"request to : \", requestTo);\r\n    // requestFrom.username!==user.username ? setNotifications([...notifications,{name:requestFrom.username,img:requestFrom.profileimage ,type:\"decline\"}]) : setNotifications([...notifications,{name:requestTo.username,img:requestTo.profileimage,type:\"decline\"}]);\r\n    requestFrom.username !== user.username\r\n      ? setNotifications([...requestTo.notifications])\r\n      : setNotifications([...requestFrom.notifications]);\r\n    });\r\n    \r\n    socket.on(\"notificationUpdate\", ({ Notifications ,User}) => {\r\n      console.log(\"notificationUpdate is running on clinet side!!\");\r\n      console.log(Notifications);\r\n      if(user.username === User.username){\r\n        setNotifications([...Notifications]);\r\n      }\r\n    });\r\n    \r\n    socket.on('notificationClear',({Notifications})=>{\r\n      console.log(\"notificationclear is running on clinet side!!\");\r\n      setNotifications([...Notifications]);\r\n    })\r\n    \r\n    socket.on('groupChatInvite',({requestFrom,requestTo})=>{\r\n    requestFrom.username !== user.username\r\n      ? setNotifications([...requestTo.notifications])\r\n      : setNotifications([...requestFrom.notifications]);\r\n    })\r\n    \r\n    socket.on('groupChatDecline',({notifyFrom,notifyTo})=>{\r\n    notifyFrom.username !== user.username\r\n      ? setNotifications([...notifyTo.notifications])\r\n      : setNotifications([...notifyFrom.notifications]);\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchUser() {\r\n      const res = await apiRequest.fetchPrivateData(\r\n        `${process.env.PRIVATE_URL}/getuserdata`,\r\n        sessionStorage.getItem(\"authToken\")\r\n      );\r\n      console.log(res.data.user);\r\n      setUser(res.data.user);\r\n      console.log(user);\r\n      setNotifications([...res.data.user.notifications]);\r\n      console.log(notifications);\r\n    }\r\n    fetchUser();\r\n  }, []);\r\n\r\n  const notificationClearAll = () => {\r\n    socket.emit(\"clearAllNotifications\",{userid:user._id});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex h-screen w-screen flex-col items-center\">\r\n      <Suspense fallback={<h1>loading...</h1>}>\r\n        <SideBar />\r\n      </Suspense>\r\n        {notifications.length === 0 ? null : (\r\n          <Button\r\n            text=\"clear-all\"\r\n            classname=\"clear-all text-white md:text-xl p-1 md:p-2 m-2 md:m-4 rounded-lg\"\r\n            onclickHandler={notificationClearAll}\r\n          />\r\n        )}\r\n\r\n        <div className=\"notifications flex flex-col\">\r\n          {notifications.length !== 0 ? (\r\n            notifications.map((notification) => {\r\n              console.log(notification);\r\n              return (\r\n                <Notification\r\n                  key={notification._id}\r\n                  id={notification._id}\r\n                  userid={user._id}\r\n                  text={notification.text}\r\n                  img={notification.img}\r\n                  name={notification.name}\r\n                  type={notification.typeof}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <h1 className=\"text-xl font-bold text-white\">No notifications!!</h1>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import axios from 'axios';\r\nclass apiRequestService{\r\n    async sendformData(url, data){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        }       \r\n        try{\r\n            const response = await axios.post(url,data,config);\r\n            // console.log(response);\r\n            return response;\r\n        }\r\n        catch(err){\r\n            // console.log(err);\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async getuser(url,data,token){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\":`Bearer ${token}`\r\n            }\r\n        }\r\n        try{\r\n            const response = await axios.post(url,data,config);\r\n            return response;\r\n        }\r\n        catch(err){\r\n            return err.message;\r\n        }\r\n\r\n    }\r\n\r\n    async fetchData(url){\r\n        try{\r\n            const response = await axios.get(url);\r\n            return response;\r\n        }\r\n        catch(err){\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async fetchPrivateData(url,token){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\":`Bearer ${token}`\r\n            }\r\n        };\r\n        try {\r\n            const response = await axios.get(url,config);\r\n            return response;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n\r\n    }\r\n\r\n    async fileUpload(url,data,token){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"multipart/form-data\",\r\n                \"Authorization\":`Bearer ${token}`\r\n            }\r\n        }\r\n        try {\r\n            const response = await axios.post(url,data,config);\r\n            // console.log(response);\r\n            return response;\r\n        } catch (error) {\r\n            // console.log(error);\r\n            return error;    \r\n        }\r\n    }\r\n\r\n    userGoogleLogin=async(url,data)=>{\r\n        try{\r\n            const config ={\r\n                headers:{\r\n                    \"content-type\": \"application/json\"\r\n                }\r\n            }\r\n            const response = await axios.post(url,data,config)\r\n            return response;\r\n        }\r\n        catch(error){\r\n            return error;\r\n        }\r\n    }\r\n\r\n    userFacebookLogin=async(url,data)=>{\r\n        try{\r\n            const config ={\r\n                headers:{\r\n                    \"content-type\": \"application/json\"\r\n                }\r\n            }\r\n            const response = await axios.post(url,data,config)\r\n            return response;\r\n        }\r\n        catch(error){\r\n            return error;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default apiRequestService;"],"sourceRoot":""}