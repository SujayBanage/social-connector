{"version":3,"sources":["UIshared/lazyload/lazyload.js","components/singlePost/singlepost.js"],"names":["LazyLoad","props","useState","showImage","setShowImage","imageRef","useRef","useEffect","ref","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","disconnect","observe","resgisterObserver","current","src","imgsrc","alt","className","styleClass","srcset","sizes","Singlepost","socket","useContext","socketContext","edit","setEdit","editText","setEditText","process","OUTPUT_URL","description","currentUser","user","text","classname","onclickHandler","console","log","emit","postid","postCreatorName","CreatorName","for","id","type","placeholder","value","onChange","e","target","onClick"],"mappings":";uIA0CeA,IAzBC,SAACC,GAAS,IAUT,EAVQ,EACYC,oBAAS,GADrB,mBACdC,EADc,KACJC,EADI,KAEfC,EAAWC,iBAAO,MAQxB,OANAC,qBAAU,YAlBU,SAACC,EAAIJ,GACR,IAAIK,sBAAqB,SAACC,EAAQC,GAC/CD,EAAQE,SAAQ,SAACC,GACTA,EAAMC,iBAGVV,GAAa,GACbO,EAASI,oBAIRC,QAAQR,GASbS,CAAkBZ,EAASa,QAAQd,KACrC,IAGCD,EAEK,wBAAKgB,IAAKlB,EAAMmB,OAAQC,IAAI,QAAQC,UAAWrB,EAAMsB,YAArD,oBAAqE,SAArE,uBAAqFtB,EAAMuB,QAA3F,sBAA0GvB,EAAMwB,OAAhH,IAOJ,mCACA,sBAAMjB,IAAKH,Q,sGC6CJqB,UA7EI,SAACzB,GAElB,IAAM0B,EAASC,qBAAWC,iBAE1B,EAAwB3B,oBAAS,GAAjC,mBAAO4B,EAAP,KAAaC,EAAb,KACA,EAAgC7B,mBAAS,IAAzC,mBAAO8B,EAAP,KAAiBC,EAAjB,KAqBA,OACE,sBAAKX,UAAU,0FAAf,UACE,cAAC,IAAD,CACEF,OAAM,UAAKc,mIAAYC,WAAjB,gBAAmClC,EAAMmB,QAC/CG,WAAW,0BACXF,IAAI,UAGN,sBAAMC,UAAU,UAAhB,SAA2BrB,EAAMmC,cAEjC,qBAAKd,UAAU,eAAf,SACGrB,EAAMoC,cAAgBpC,EAAMqC,KAC3B,qCACE,cAAC,IAAD,CACEC,KAAK,gBACLC,UAAU,4FACVC,eAnCU,WACpBC,QAAQC,IAAI,iCACZhB,EAAOiB,KAAK,aAAc,CACxBC,OAAQ5C,EAAM4C,OACdC,gBAAiB7C,EAAM8C,iBAiCjB,cAAC,IAAD,CACER,KAAK,oBACLC,UAAU,8FACVC,eAAgB,kBAAIV,GAASD,SAG/B,OAIJ,sBAAKR,WAAoB,IAATQ,EAAgB,SAAW,kCAA3C,UACE,uBACER,UAAU,6CACV0B,IAAI,WAFN,8BAMA,uBACE1B,UAAU,6HACV2B,GAAG,WACHC,KAAK,OACLC,YAAY,qBACZC,MAAOpB,EACPqB,SAAU,SAACC,GACTrB,EAAYqB,EAAEC,OAAOH,UAGzB,wBAAQ9B,UAAU,4CAA4CkC,QAzDlD,WAClBzB,GAASD,GACTY,QAAQC,IAAI,+BACZhB,EAAOiB,KAAK,aAAc,CACxBC,OAAQ5C,EAAM4C,OACdC,gBAAiB7C,EAAM8C,YACvBR,KAAKP,IAEPC,EAAY,KAiDN,0B","file":"static/js/21.ba53113e.chunk.js","sourcesContent":["import React,{useState,useRef,useEffect} from 'react';\r\n\r\n\r\nconst resgisterObserver=(ref,setShowImage)=>{\r\n    const observer = new IntersectionObserver((entries,observer)=>{\r\n        entries.forEach((entry)=>{\r\n            if(!entry.isIntersecting){\r\n                return;\r\n            }\r\n            setShowImage(true);\r\n            observer.disconnect();\r\n        })\r\n\r\n    });\r\n    observer.observe(ref)\r\n}\r\n\r\nconst LazyLoad =(props)=>{\r\n    const [showImage,setShowImage] = useState(false);\r\n    const imageRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        //!add intersection observer!!!\r\n        resgisterObserver(imageRef.current,setShowImage);\r\n    },[])\r\n\r\n\r\n    if(showImage){\r\n        return (\r\n            <img src={props.imgsrc} alt=\"image\" className={props.styleClass} alt=\"image\" srcSet={props.srcset} sizes={props.sizes}/>\r\n            // <img src={props.imgsrc} alt=\"image\" className={props.styleClass} alt=\"image\"/>\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        <span ref={imageRef}></span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LazyLoad;","import React,{useState,useContext} from \"react\";\r\nimport \"./singlepost.css\";\r\nimport Button from \"../../UIshared/button/button.js\";\r\nimport Lazyload from '../../UIshared/lazyload/lazyload.js';\r\nimport {socketContext} from '../../index.js';\r\nconst Singlepost = (props) => {\r\n\r\n  const socket = useContext(socketContext);\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const [editText, setEditText] = useState(\"\");\r\n  \r\n  const deleteHandler = () => {\r\n    console.log(\"delete handler is runnning!!!\");\r\n    socket.emit(\"postDelete\", {\r\n      postid: props.postid,\r\n      postCreatorName: props.CreatorName,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    setEdit(!edit);\r\n    console.log(\"edit handler is runnning!!!\");\r\n    socket.emit(\"postUpdate\", {\r\n      postid: props.postid,\r\n      postCreatorName: props.CreatorName,\r\n      text:editText\r\n    });\r\n    setEditText('');\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"singlepost m-8 p-2 md:p-2 rounded-md flex flex-col items-center justify-center bg-white\">\r\n      <Lazyload\r\n        imgsrc={`${process.env.OUTPUT_URL}/min-${props.imgsrc}`}\r\n        styleClass=\"object-cover rounded-md\"\r\n        alt=\"image\"\r\n      />\r\n\r\n      <span className=\"text-md\">{props.description}</span>\r\n\r\n      <div className=\"buttons flex\">\r\n        {props.currentUser === props.user ? (\r\n          <>\r\n            <Button\r\n              text=\"delete ❌\"\r\n              classname=\"bg-red-400 text-white m-2  text-lg rounded-md p-2 hover:bg-red-500 border-2 border-white \"\r\n              onclickHandler={deleteHandler}\r\n            />\r\n            <Button\r\n              text=\"edit 🛠\"\r\n              classname=\"bg-blue-400 text-white  m-2 text-lg rounded-md p-2 hover:bg-blue-500 border-2 border-white \"\r\n              onclickHandler={()=>setEdit(!edit)}\r\n            />\r\n          </>\r\n        ) : null}\r\n\r\n        {/* //! below the edit text  */}\r\n      </div>\r\n        <div className={edit !== true ? \"hidden\" : \"mb-4 flex flex-col items-center\"}>\r\n          <label\r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n            for=\"username\"\r\n          >\r\n            edit description\r\n          </label>\r\n          <input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            id=\"edittext\"\r\n            type=\"text\"\r\n            placeholder=\"edit description..\"\r\n            value={editText}\r\n            onChange={(e)=>{\r\n              setEditText(e.target.value);\r\n            }}\r\n          />\r\n          <button className=\"bg-blue-400 text-white p-2 m-2 rounded-md\" onClick={editHandler}>edit</button>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Singlepost;\r\n"],"sourceRoot":""}