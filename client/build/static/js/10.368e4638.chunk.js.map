{"version":3,"sources":["UIshared/button/button.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","chatComponents/Chat/iPhone.mp3","chatComponents/Chat/Chat.js","services/apiRequestService.js"],"names":["button","props","linkTo","to","className","classname","text","type","onClick","onclickHandler","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ChatUser","lazy","Friend","Message","ring","Audio","iphone","apiRequest","apiRequestService","ACTIONS","Chat","socket","useContext","socketContext","useParams","chatroom","currentuser","console","log","history","useHistory","useReducer","state","action","payload","messages","chatType","addusers","users","chatusers","userfriends","emoji","dispatch","useEffect","emit","roomname","a","fetchPrivateData","process","PRIVATE_URL","sessionStorage","getItem","res","data","success","chatUsers","off","on","currentmsg","user","play","userAdded","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","toastId","error","notify","username","map","usr","fallback","id","_id","profileimage","status","onChange","e","friend","userGoogleLogin","url","config","headers","axios","post","response","userFacebookLogin","token","get"],"mappings":"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","file":"static/js/10.368e4638.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./button.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst button = (props) => {\r\n  return props.linkTo ? (\r\n    <Link to={props.linkTo} >\r\n      <button className={props.classname}>{props.text}</button>\r\n    </Link>\r\n  ) : (\r\n    <button className={props.classname} type={props.type} onClick={props.onclickHandler}>\r\n      {props.text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default button;\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/iPhone.4c66df71.mp3\";","import React, { useContext, useEffect, useReducer ,Suspense,lazy} from \"react\";\r\nimport { socketContext } from \"../../index.js\";\r\nimport { useParams ,useHistory} from \"react-router-dom\";\r\nimport Button from \"../../UIshared/button/button.js\";\r\nimport apiRequestService from \"../../services/apiRequestService.js\";\r\nimport \"./Chat.css\";\r\nimport {toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport iphone from './iPhone.mp3';\r\nconst ChatUser =lazy(() =>import('../chatUser/chatUser.js'));\r\nconst Friend = lazy(() =>import(\"../friend/friend.js\"));\r\nconst Message= lazy(()=>import(\"../message/message.js\"));\r\nlet ring = new Audio(iphone);\r\n\r\n\r\nconst apiRequest = new apiRequestService();\r\n\r\nconst notify = (success, message) => {\r\n  if (success===true) {\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      toastId:'success'\r\n    });\r\n  } else if (success===false){\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      toastId:'fail'\r\n    });\r\n  } else {\r\n    toast(message, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      toastId:'no'\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ACTIONS = {\r\n  SET_MESSAGE: \"setMessage\",\r\n  SET_MESSAGES: \"setMessages\",\r\n  SET_TEXT: \"setText\",\r\n  SET_CHATTYPE: \"setChatType\",\r\n  SET_ADDUSERS: \"setAddUsers\",\r\n  SET_USERS: \"setUsers\",\r\n  SET_CHATUSERS:\"setChatUsers\",\r\n  SET_FRIENDS:'setFriends',\r\n  SET_CHOSEN_EMOJI:'setChosenEmoji'\r\n};\r\n\r\nconst Chat = () => {\r\n  const socket = useContext(socketContext);\r\n  const { chatroom, currentuser } = useParams();\r\n  console.log('in chatroom : ',chatroom,\"current user : \",currentuser);\r\n\r\n  const history = useHistory();\r\n\r\n  const initialState = {\r\n    text: \"\",\r\n    messages: [],\r\n    chatType: \"\",\r\n    addusers: false,\r\n    users: \"\",\r\n    chatusers:[],\r\n    userfriends: [],\r\n    emoji:null\r\n  };\r\n  \r\n  const reducer = (state, action) => {\r\n    if (action.type === \"setText\") {\r\n      return { ...state, text: action.payload };\r\n    }\r\n    // else if(action.type === 'setMessage'){\r\n      //     return {...state,message:{...action.payload}}\r\n      // }\r\n      else if (action.type === \"setMessages\") {\r\n        return { ...state, messages: [...action.payload] };\r\n      } else if (action.type === \"setChatType\") {\r\n        return { ...state, chatType: action.payload };\r\n      } else if (action.type === \"setAddUsers\") {\r\n        return { ...state, addusers: action.payload };\r\n      } else if (action.type === \"setUsers\") {\r\n        return { ...state, users: action.payload };\r\n      }\r\n      else if(action.type==='setChatUsers'){\r\n        return { ...state, chatusers:[...action.payload] };\r\n      }\r\n      else if(action.type==='setFriends'){\r\n        return { ...state, userfriends:[...action.payload] };\r\n      }\r\n      else if(action.type==='setChosenEmoji'){\r\n        return { ...state,emoji:{...action.payload} };\r\n      }\r\n      else {\r\n        return state;\r\n      }\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    console.log(chatroom);\r\n    if(currentuser){\r\n      socket.emit(\"join\", { roomname: chatroom });\r\n    }\r\n    (async () => {\r\n      try {\r\n        const res = await apiRequest.fetchPrivateData(\r\n          `${process.env.PRIVATE_URL}/getmessages/${chatroom}`,\r\n          sessionStorage.getItem(\"authToken\")\r\n        );\r\n\r\n        if(res.data.success===true) {\r\n          dispatch({ type: ACTIONS.SET_MESSAGES, payload: res.data.messages });\r\n          dispatch({ type: ACTIONS.SET_CHATTYPE, payload: res.data.chatType });\r\n          dispatch({ type: ACTIONS.SET_CHATUSERS, payload: res.data.chatUsers });\r\n          dispatch({ type: ACTIONS.SET_FRIENDS, payload: res.data.userfriends});\r\n        }\r\n        \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n    \r\n    return () => {\r\n      socket.off();\r\n    };\r\n  }, [socket]);\r\n  \r\n  socket.on(\"updatedMessages\", ({ messages,currentmsg }) => {\r\n    if(currentmsg.user!== currentuser){\r\n      ring.play();\r\n    }\r\n    dispatch({ type: ACTIONS.SET_MESSAGES, payload: messages });\r\n  });\r\n  \r\n  socket.on('updatedUsers',({users,userfriends,userAdded})=>{\r\n    dispatch({ type: ACTIONS.SET_CHATUSERS, payload:users});\r\n    dispatch({ type: ACTIONS.SET_FRIENDS, payload:userfriends});\r\n    const message = {\r\n      text :`${userAdded.username} is added to ${chatroom} room`,\r\n      user:'admin'\r\n    }\r\n    // socket.emit('message',{message:message,roomname: chatroom});\r\n    notify(true,message.text);\r\n  })\r\n\r\n\r\n  \r\n  const messageHandler = () => {\r\n    const message = {\r\n      text: state.text,\r\n      user: currentuser,\r\n    };\r\n    // dispatch({type:ACTIONS.SET_MESSAGE,payload:message});\r\n    socket.emit(\"message\", { message: message, roomname: chatroom });\r\n    dispatch({ type: ACTIONS.SET_TEXT, payload: \"\" });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"chatComponent flex flex-col md:flex-row h-full w-full md:w-screen  items-center md:items-center justify-center\">\r\n      <div className=\"chatUsers flex flex-row flex-wrap md:flex-col items-center md:items-center justify-center md:justify-start md:h-screen w-screen md:w-1/5 overflow-x-scroll overflow-y-scroll\">\r\n        {/* <h1 className=\"text-center text-white font-bold\">Active Users</h1> */}\r\n        {\r\n          state.chatusers.length!==0 ? state.chatusers.map((usr)=>{\r\n\r\n            return <Suspense fallback={<h1>loading....</h1>}>\r\n            <ChatUser key ={usr._id} id={usr._id} username={usr.username} profileimage={usr.profileimage} status={usr.status}/> \r\n            </Suspense>\r\n          }) : <h1>No users!!!</h1>\r\n        }\r\n\r\n\r\n      </div>\r\n\r\n      <div className=\"chatContainer flex flex-col items-center justify-center md:h-screen w-screen md:w-7/12 mr-4 ml-4\">\r\n        <div className=\"chatBox flex flex-col overflow-y-scroll md:overflow-y-scroll p-4 mt-4 rounded-md h-full w-screen md:w-full\">\r\n          {state.messages.length !== 0 ? (\r\n            state.messages.map((message) => {\r\n              return (\r\n                <Suspense fallback={<h1>loading.....</h1>}>\r\n                <Message message={message} currentuser={currentuser}/>\r\n                </Suspense>\r\n              );\r\n            })\r\n          ) : (\r\n            <h1>no messages</h1>\r\n          )}\r\n        </div>\r\n        <div className=\"messageBox flex w-full\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"w-full mt-2\"\r\n            value={state.text}\r\n            onChange={(e) =>\r\n              dispatch({ type: ACTIONS.SET_TEXT, payload:e.target.value})\r\n            }\r\n          >\r\n          </input>\r\n          {/* <Picker onEmojiClick={(event,emojiObject)=>dispatch({ type:ACTIONS.SET_CHOSEN_EMOJI,payload:emojiObject})} pickerStyle={{width:\"100%\"}}/> */}\r\n          <Button\r\n            text=\"send\"\r\n            onclickHandler={messageHandler}\r\n            classname=\"p-1 h-10 m-2 send rounded-md bg-green-500 text-white \"\r\n          />\r\n          <Button text=\"leavechat\" onclickHandler={()=>{\r\n            history.push('/messages')\r\n          }} classname=\"p-1 h-10 m-2 leavechat rounded-md bg-red-500 text-white \"/>\r\n        </div>\r\n      </div>\r\n\r\n\r\n           \r\n      <div className={state.chatType===\"groupChat\" ? \"Addusers overflow-y-scroll flex md:flex-col  flex-wrap m-2 items-center justify-center md:justify-start h-36 md:h-screen w-screen md:w-1/3\" : \"hidden\"}>\r\n            {\r\n              state.userfriends.length!==0 ? state.userfriends.map((friend)=>{\r\n                return <Suspense fallback={<h1>loading.....</h1>}>\r\n                <Friend key ={friend._id} id={friend._id} username={friend.username} profileimage={friend.profileimage} chatroom ={chatroom} currentuser={currentuser} type=\"groupChat\"/>\r\n                </Suspense>\r\n              }) : <h1 className=\"text-white\">No friends</h1>\r\n            }\r\n      </div>\r\n\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import axios from 'axios';\r\nclass apiRequestService{\r\n    async sendformData(url, data){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        }       \r\n        try{\r\n            const response = await axios.post(url,data,config);\r\n            // console.log(response);\r\n            return response;\r\n        }\r\n        catch(err){\r\n            // console.log(err);\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async getuser(url,data,token){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\":`Bearer ${token}`\r\n            }\r\n        }\r\n        try{\r\n            const response = await axios.post(url,data,config);\r\n            return response;\r\n        }\r\n        catch(err){\r\n            return err.message;\r\n        }\r\n\r\n    }\r\n\r\n    async fetchData(url){\r\n        try{\r\n            const response = await axios.get(url);\r\n            return response;\r\n        }\r\n        catch(err){\r\n            return err;\r\n        }\r\n    }\r\n\r\n    async fetchPrivateData(url,token){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\":`Bearer ${token}`\r\n            }\r\n        };\r\n        try {\r\n            const response = await axios.get(url,config);\r\n            return response;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n\r\n    }\r\n\r\n    async fileUpload(url,data,token){\r\n        const config = {\r\n            headers:{\r\n                \"content-type\": \"multipart/form-data\",\r\n                \"Authorization\":`Bearer ${token}`\r\n            }\r\n        }\r\n        try {\r\n            const response = await axios.post(url,data,config);\r\n            // console.log(response);\r\n            return response;\r\n        } catch (error) {\r\n            // console.log(error);\r\n            return error;    \r\n        }\r\n    }\r\n\r\n    userGoogleLogin=async(url,data)=>{\r\n        try{\r\n            const config ={\r\n                headers:{\r\n                    \"content-type\": \"application/json\"\r\n                }\r\n            }\r\n            const response = await axios.post(url,data,config)\r\n            return response;\r\n        }\r\n        catch(error){\r\n            return error;\r\n        }\r\n    }\r\n\r\n    userFacebookLogin=async(url,data)=>{\r\n        try{\r\n            const config ={\r\n                headers:{\r\n                    \"content-type\": \"application/json\"\r\n                }\r\n            }\r\n            const response = await axios.post(url,data,config)\r\n            return response;\r\n        }\r\n        catch(error){\r\n            return error;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default apiRequestService;"],"sourceRoot":""}